#!/bin/bash

# 설정
APP_NAME="pdf2md"   # 실행할 Python 파일 이름
BIND="0.0.0.0:8021"

APP_DIR=$(cd "`dirname $0`" >/dev/null; pwd)
APP_MODULE="$APP_NAME:app"  # 예: app.py에 Flask 인스턴스가 있다면 app:app
PID_FILE="$APP_DIR/gunicorn.pid"    # PID 파일 이름
LOG_FILE="$APP_DIR/log/gunicorn.log"   # 로그 파일 이름
WORKERS=4

start() {
    echo "Starting $APP_NAME..."
    cd "$APP_DIR" || exit 1
    if [ -f "$PID_FILE" ] && kill -0 "$(cat $PID_FILE)" 2>/dev/null; then
        echo "$APP_NAME is already running."
        exit 0
    fi
    # gunicorn 실행
       # --worker-class : Flask의 경우 기본 sync, FastAPI는 uvicorn.workers.UvicornWorker 필요
       # --timeout : 요청 처리 시간 초과 방지
       # --max-requests : 메모리 누수 방지 (주기적 워커 재시작)
    gunicorn "$APP_MODULE" \
        --daemon \
        --workers $WORKERS \
        --timeout 30 \
        --max-requests 1000 \
        --max-requests-jitter 50 \
        --bind $BIND \
        --pid "$PID_FILE" \
        --log-file "$LOG_FILE" \
        --log-level debug
    sleep 1
    if [ -f "$PID_FILE" ]; then
        echo "$APP_NAME is started. (pid: $(cat $PID_FILE))"
    else
        echo "$APP_NAME is not started."
    fi
}

stop() {
    echo "Stopping $APP_NAME..."
    if [ -f "$PID_FILE" ]; then
        kill -TERM "$(cat $PID_FILE)" && rm -f "$PID_FILE"
        echo "$APP_NAME stopped."
    else
        echo "$APP_NAME is not running (no PID file found)."
    fi
}

restart() {
    echo "Restarting $APP_NAME..."
    stop
    sleep 1
    start
}

status() {
    if [ -f "$PID_FILE" ] && kill -0 "$(cat $PID_FILE)" 2>/dev/null; then
        echo "$APP_NAME is running with PID $(cat $PID_FILE)."
    else
        echo "$APP_NAME is not running."
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    log)
        tail -f $LOG_FILE
        ;;
    *)
        echo "Usage: `basename $0` {start|stop|restart|status|log}"
        exit 1
        ;;
esac
